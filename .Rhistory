# 1. Average Attitude Scores by Gender and Age Groups
attitude_heatmap_data <- uk_data %>%
group_by(age, gender) %>%
summarise(
social_conservatism = weighted.mean(social_conservatism, wt, na.rm = TRUE),
economic_leftism = weighted.mean(economic_leftism, wt, na.rm = TRUE),
n = n(),
.groups = "drop"
) %>%
pivot_longer(cols = c(social_conservatism, economic_leftism),
names_to = "attitude_dimension",
values_to = "mean_score") %>%
filter(!is.na(mean_score) & !is.na(gender))
# Heatmap 1: Mean Attitude Scores
ggplot(attitude_heatmap_data, aes(x = age, y = paste(gender, attitude_dimension), fill = mean_score)) +
geom_tile(color = "white", size = 0.5) +
geom_text(aes(label = round(mean_score, 2)), color = "white", size = 3, fontface = "bold") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0,
name = "Mean\nScore") +
labs(title = "Average Political Attitudes by Gender and Age",
subtitle = "Higher scores = more conservative (social) / more leftist (economic)",
x = "Age Group", y = "Gender × Attitude Dimension") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 14, face = "bold"))
# 3. Sample Size Check Heatmap
sample_sizes <- uk_data %>%
group_by(age, gender) %>%
summarise(n = n(), .groups = "drop") %>%
filter(!is.na(gender))
# ggplot(sample_sizes, aes(x = age, y = gender, fill = n)) +
#   geom_tile(color = "white", size = 0.5) +
#   geom_text(aes(label = n), color = "white", size = 3, fontface = "bold") +
#   scale_fill_gradient(low = "lightgray", high = "darkgreen", name = "Sample\nSize") +
#   labs(title = "Sample Sizes by Age and Gender",
#        subtitle = "Check for adequate representation across groups",
#        x = "Age Group", y = "Gender") +
#   theme_minimal() +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1))
# 4. Clustering Heatmaps for All Survey Responses by Age Group
library(pheatmap)
library(RColorBrewer)
# Prepare data for clustering - all attitude questions
attitude_vars <- c("soc_respect", "soc_deathpen", "soc_schools", "soc_censor", "soc_punish",
"econ_redist", "econ_bigbiz", "econ_unfair", "econ_onelaw", "econ_exploit")
# Get unique age groups
age_groups <- unique(uk_data$age[!is.na(uk_data$age)])
# Create clustering heatmap for each age group
for(age_group in age_groups) {
# Filter data for this age group and select attitude variables
age_data <- uk_data %>%
filter(age == age_group, !is.na(age)) %>%
select(all_of(attitude_vars), wt) %>%
filter(complete.cases(.))
# Skip if insufficient data
if(nrow(age_data) < 50) next
# Calculate weighted correlation matrix
corr_data <- age_data %>% select(-wt)
# Convert to numeric matrix for correlation
numeric_matrix <- as.matrix(corr_data)
# Calculate correlation matrix
corr_matrix <- cor(numeric_matrix, use = "complete.obs")
# Create heatmap
pheatmap(corr_matrix,
main = paste("Survey Response Correlations:", age_group, "Age Group"),
color = colorRampPalette(c("#2166AC", "white", "#B2182B"))(100),
breaks = seq(-1, 1, length.out = 101),
display_numbers = TRUE,
number_color = "black",
fontsize = 10,
fontsize_number = 7,
cluster_rows = TRUE,
cluster_cols = TRUE,
show_rownames = TRUE,
show_colnames = TRUE,
angle_col = 45,
cellwidth = 35,
cellheight = 35,
border_color = "grey90")
}
# 1. Average Attitude Scores by Gender and Age Groups
attitude_heatmap_data <- uk_data %>%
group_by(age, gender) %>%
summarise(
social_conservatism = weighted.mean(social_conservatism, wt, na.rm = TRUE),
economic_leftism = weighted.mean(economic_leftism, wt, na.rm = TRUE),
n = n(),
.groups = "drop"
) %>%
pivot_longer(cols = c(social_conservatism, economic_leftism),
names_to = "attitude_dimension",
values_to = "mean_score") %>%
filter(!is.na(mean_score) & !is.na(gender))
# Heatmap 1: Mean Attitude Scores
ggplot(attitude_heatmap_data, aes(x = age, y = paste(gender, attitude_dimension), fill = mean_score)) +
geom_tile(color = "white", size = 0.5) +
geom_text(aes(label = round(mean_score, 2)), color = "white", size = 3, fontface = "bold") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0,
name = "Mean\nScore") +
labs(title = "Average Political Attitudes by Gender and Age",
subtitle = "Higher scores = more conservative (social) / more leftist (economic)",
x = "Age Group", y = "Gender × Attitude Dimension") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 14, face = "bold"))
# 3. Sample Size Check Heatmap
sample_sizes <- uk_data %>%
group_by(age, gender) %>%
summarise(n = n(), .groups = "drop") %>%
filter(!is.na(gender))
ggplot(sample_sizes, aes(x = age, y = gender, fill = n)) +
geom_tile(color = "white", size = 0.5) +
geom_text(aes(label = n), color = "white", size = 3, fontface = "bold") +
scale_fill_gradient(low = "lightgray", high = "darkgreen", name = "Sample\nSize") +
labs(title = "Sample Sizes by Age and Gender",
subtitle = "Check for adequate representation across groups",
x = "Age Group", y = "Gender") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# 4. Clustering Heatmaps for All Survey Responses by Age Group
library(pheatmap)
library(RColorBrewer)
# Prepare data for clustering - all attitude questions
attitude_vars <- c("soc_respect", "soc_deathpen", "soc_schools", "soc_censor", "soc_punish",
"econ_redist", "econ_bigbiz", "econ_unfair", "econ_onelaw", "econ_exploit")
# Get unique age groups
age_groups <- unique(uk_data$age[!is.na(uk_data$age)])
# Create clustering heatmap for each age group
for(age_group in age_groups) {
cat("\n### Correlation Heatmap for", age_group, "Age Group\n")
# Filter data for this age group and select attitude variables
age_data <- uk_data %>%
filter(age == age_group, !is.na(age)) %>%
select(all_of(attitude_vars), wt) %>%
filter(complete.cases(.))
# Skip if insufficient data
if(nrow(age_data) < 50) {
cat("Insufficient data for", age_group, "(n =", nrow(age_data), ")\n")
next
}
# Calculate correlation matrix
corr_data <- age_data %>% select(-wt)
numeric_matrix <- as.matrix(corr_data)
corr_matrix <- cor(numeric_matrix, use = "complete.obs")
# Create and print heatmap
p <- pheatmap(corr_matrix,
main = paste("Survey Response Correlations -", age_group),
color = colorRampPalette(c("#2166AC", "white", "#B2182B"))(100),
breaks = seq(-1, 1, length.out = 101),
display_numbers = TRUE,
number_color = "black",
fontsize = 12,
fontsize_number = 8,
cluster_rows = TRUE,
cluster_cols = TRUE,
show_rownames = TRUE,
show_colnames = TRUE,
angle_col = 45,
cellwidth = 40,
cellheight = 40,
border_color = "grey90",
silent = FALSE)
print(p)
cat("\nSample size for", age_group, ":", nrow(age_data), "respondents\n")
}
source('scripts/setup.R')
uk_data <- uk_data_test
glimpse(uk_data)
library(VIM)
#VIM::aggr(uk_data, plot = FALSE)
#unique(uk_data$eu_ref)
# we treat don't know as missing data
# sapply(uk_data[,c(3:6, 11:27)], unique)
# apply unique to all data
# encode NA's appropriately
uk_data <- uk_data %>%
mutate(across(everything(), ~case_when(
.x == "Don't know" ~ NA,
.x == "dk" ~ NA,
.x == "no_answer" ~ NA,           # religion column
.x == "prefer_not_to_say" ~ NA,   # marital column
TRUE ~ .x
)))
VIM::aggr(uk_data, plot = FALSE)
glimpse(uk_data)
# Combine both gaps for comparison
combined_gaps <- bind_rows(
social_gaps %>% mutate(dimension = "Social Attitudes") %>% select(age, gender_gap, dimension),
economic_gaps %>% mutate(dimension = "Economic Attitudes") %>% select(age, gender_gap, dimension)
)
# Create heatmap
ggplot(combined_gaps, aes(x = age, y = dimension, fill = abs(gender_gap))) +
geom_tile(color = "white", size = 0.5) +
geom_text(aes(label = round(gender_gap, 2)), color = "white", fontface = "bold") +
scale_fill_gradient(low = "lightblue", high = "darkblue", name = "Gap\nMagnitude") +
labs(
title = "Gender Gap Magnitude Across Dimensions and Age Groups",
subtitle = "Values show actual gap size (Male - Female)",
x = "Age Group",
y = "Attitude Dimension"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# 1. Average Attitude Scores by Gender and Age Groups
attitude_heatmap_data <- uk_data %>%
group_by(age, gender) %>%
summarise(
social_conservatism = weighted.mean(social_conservatism, wt, na.rm = TRUE),
economic_leftism = weighted.mean(economic_leftism, wt, na.rm = TRUE),
n = n(),
.groups = "drop"
) %>%
pivot_longer(cols = c(social_conservatism, economic_leftism),
names_to = "attitude_dimension",
values_to = "mean_score") %>%
filter(!is.na(mean_score) & !is.na(gender))
# Heatmap 1: Mean Attitude Scores
ggplot(attitude_heatmap_data, aes(x = age, y = paste(gender, attitude_dimension), fill = mean_score)) +
geom_tile(color = "white", size = 0.5) +
geom_text(aes(label = round(mean_score, 2)), color = "white", size = 3, fontface = "bold") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0,
name = "Mean\nScore") +
labs(title = "Average Political Attitudes by Gender and Age",
subtitle = "Higher scores = more conservative (social) / more leftist (economic)",
x = "Age Group", y = "Gender × Attitude Dimension") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 14, face = "bold"))
# 3. Sample Size Check Heatmap
sample_sizes <- uk_data %>%
group_by(age, gender) %>%
summarise(n = n(), .groups = "drop") %>%
filter(!is.na(gender))
ggplot(sample_sizes, aes(x = age, y = gender, fill = n)) +
geom_tile(color = "white", size = 0.5) +
geom_text(aes(label = n), color = "white", size = 3, fontface = "bold") +
scale_fill_gradient(low = "lightgray", high = "darkgreen", name = "Sample\nSize") +
labs(title = "Sample Sizes by Age and Gender",
subtitle = "Check for adequate representation across groups",
x = "Age Group", y = "Gender") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# 4. Clustering Heatmaps for All Survey Responses by Age Group
library(pheatmap)
library(RColorBrewer)
# Prepare data for clustering - all attitude questions
attitude_vars <- c("soc_respect", "soc_deathpen", "soc_schools", "soc_censor", "soc_punish",
"econ_redist", "econ_bigbiz", "econ_unfair", "econ_onelaw", "econ_exploit")
# Get unique age groups
age_groups <- unique(uk_data$age[!is.na(uk_data$age)])
# Create clustering heatmap for each age group
for(age_group in age_groups) {
cat("\n### Correlation Heatmap for", age_group, "Age Group\n")
# Filter data for this age group and select attitude variables
age_data <- uk_data %>%
filter(age == age_group, !is.na(age)) %>%
select(all_of(attitude_vars), wt) %>%
filter(complete.cases(.))
# Skip if insufficient data
if(nrow(age_data) < 50) {
cat("Insufficient data for", age_group, "(n =", nrow(age_data), ")\n")
next
}
# Calculate correlation matrix
corr_data <- age_data %>% select(-wt)
numeric_matrix <- as.matrix(corr_data)
corr_matrix <- cor(numeric_matrix, use = "complete.obs")
# Create and print heatmap
p <- pheatmap(corr_matrix,
main = paste("Survey Response Correlations -", age_group),
color = colorRampPalette(c("#2166AC", "white", "#B2182B"))(100),
breaks = seq(-1, 1, length.out = 101),
display_numbers = TRUE,
number_color = "black",
fontsize = 12,
fontsize_number = 8,
cluster_rows = TRUE,
cluster_cols = TRUE,
show_rownames = TRUE,
show_colnames = TRUE,
angle_col = 45,
cellwidth = 40,
cellheight = 40,
border_color = "grey90",
silent = FALSE)
print(p)
cat("\nSample size for", age_group, ":", nrow(age_data), "respondents\n")
}
print(unique(uk_data$pv_2024))
summary(uk_data$pv_2024))
summary(uk_data$pv_2024)
) %>%
) %>%
vote_shares <- uk_data %>%
filter(!is.na(pv_2024) & !is.na(gender) & !is.na(age)) %>%
group_by(age, gender, pv_2024) %>%
summarise(
weighted_count = sum(wt, na.rm = TRUE),
.groups = "keep"
) %>%
group_by(age, gender) %>%
mutate(
total_weighted = sum(weighted_count),
vote_share = weighted_count / total_weighted * 100
) %>%
ungroup()
# Display the data
print("Vote shares by age, gender, and party:")
print(vote_shares)
) +
# Create the visualization - stacked bar chart
ggplot(vote_shares, aes(x = age, y = vote_share, fill = pv_2024)) +
geom_col(position = "stack") +
facet_wrap(~gender, ncol = 1) +
labs(
title = "2024 Election Vote Split by Gender and Age Group",
subtitle = "Weighted percentages showing party preferences across demographics",
x = "Age Group",
y = "Vote Share (%)",
fill = "2024 Vote Choice"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
strip.text = element_text(face = "bold")
) +
scale_fill_brewer(type = "qual", palette = "Set3")
# Alternative visualization - side-by-side comparison for key parties
major_parties <- vote_shares %>%
filter(pv_2024 %in% c("Conservative", "Labour", "Liberal Democrat", "Reform UK", "Green Party"))
ggplot(major_parties, aes(x = age, y = vote_share, fill = gender)) +
geom_col(position = "dodge") +
facet_wrap(~pv_2024, scales = "free_y") +
labs(
title = "Gender Differences in 2024 Vote Choice by Age Group",
subtitle = "Side-by-side comparison for major parties",
x = "Age Group",
y = "Vote Share (%)",
fill = "Gender"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold")
) +
scale_fill_manual(values = c("male" = "lightblue", "female" = "pink"))
ggplot(major_parties, aes(x = age, y = vote_share, fill = gender)) +
geom_col(position = "dodge") +
facet_wrap(~pv_2024, scales = "free_y") +
labs(
title = "Gender Differences in 2024 Vote Choice by Age Group",
subtitle = "Side-by-side comparison for major parties",
x = "Age Group",
y = "Vote Share (%)",
fill = "Gender"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold")
) +
scale_fill_manual(values = c("male" = "lightblue", "female" = "pink"))
ggplot(major_parties, aes(x = age, y = vote_share, fill = gender)) +
geom_col(position = "dodge") +
#facet_wrap(~pv_2024, scales = "free_y") +
labs(
title = "Gender Differences in 2024 Vote Choice by Age Group",
subtitle = "Side-by-side comparison for major parties",
x = "Age Group",
y = "Vote Share (%)",
fill = "Gender"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold")
) +
scale_fill_manual(values = c("male" = "lightblue", "female" = "pink"))
glimpse(major_parties)
unique(vote_shares$pv_2024)
# Alternative visualization - side-by-side comparison for key parties
major_parties <- vote_shares %>%
filter(pv_2024 %in% c("con", "lab", "ldm", "rfm", "grn"))
ggplot(major_parties, aes(x = age, y = vote_share, fill = gender)) +
geom_col(position = "dodge") +
facet_wrap(~pv_2024, scales = "free_y") +
labs(
title = "Gender Differences in 2024 Vote Choice by Age Group",
subtitle = "Side-by-side comparison for major parties",
x = "Age Group",
y = "Vote Share (%)",
fill = "Gender"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold")
) +
scale_fill_manual(values = c("male" = "lightblue", "female" = "pink"))
# Calculate average social conservatism and economic leftism scores by age and gender using post stratification and survey approach
design <- svydesign(
ids = ~1,                    # no clustering
weights = ~wt,    # your weight variable
data = uk_data
)
# Calculate weighted mean ideology score
national_avg <- svymean(~social_conservatism, design, na.rm = TRUE)
print(national_avg)
print(weighted.mean(uk_data$social_conservatism, uk_data$wt, na.rm = TRUE))
# Calculate weighted mean ideology score
national_avg <- svymean(~social_conservatism, design, na.rm = TRUE)
print(national_avg)
glimpse(uk_data)
)
# Load survey package for proper weighted calculations
library(survey)
# Create survey design object
survey_design <- svydesign(
ids = ~1,  # no clustering
weights = ~wt,
data = uk_data %>% filter(!is.na(social_conservatism) & !is.na(gender) & !is.na(age))
)
# Calculate survey-weighted means by age and gender
social_conservatism_means <- svyby(
~social_conservatism,
~age + gender,
design = survey_design,
FUN = svymean,
na.rm = TRUE
)
# Convert to data frame and clean up
social_conservatism_means <- as.data.frame(social_conservatism_means) %>%
rename(mean_social_conservatism = social_conservatism)
social_conservatism_means
# Display the results
print("Survey-weighted means by age and gender:")
print(social_conservatism_means)
# Create barplot
ggplot(social_conservatism_means, aes(x = age, y = mean_social_conservatism, fill = gender)) +
geom_col(position = "dodge") +
geom_errorbar(aes(ymin = mean_social_conservatism - se,
ymax = mean_social_conservatism + se),
position = position_dodge(width = 0.9), width = 0.25, alpha = 0.7) +
labs(
title = "Average Social Conservatism Scores by Age Group and Gender",
subtitle = "Survey-weighted means with standard errors. Higher scores = more conservative",
x = "Age Group",
y = "Mean Social Conservatism Score",
fill = "Gender"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c("male" = "lightblue", "female" = "pink"))
# Calculate survey-weighted means for economic leftism by age and gender
economic_leftism_means <- svyby(
~economic_leftism,
~age + gender,
design = survey_design,
FUN = svymean,
na.rm = TRUE
)
# Convert to data frame and clean up
economic_leftism_means <- as.data.frame(economic_leftism_means) %>%
rename(mean_economic_leftism = economic_leftism)
# Display the results
print("Survey-weighted economic leftism means by age and gender:")
print(economic_leftism_means)
# Create barplot
ggplot(economic_leftism_means, aes(x = age, y = mean_economic_leftism, fill = gender)) +
geom_col(position = "dodge") +
geom_errorbar(aes(ymin = mean_economic_leftism - se,
ymax = mean_economic_leftism + se),
position = position_dodge(width = 0.9), width = 0.25, alpha = 0.7) +
labs(
title = "Average Economic Leftism Scores by Age Group and Gender",
subtitle = "Survey-weighted means with standard errors. Higher scores = more left-wing",
x = "Age Group",
y = "Mean Economic Leftism Score",
fill = "Gender"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c("male" = "lightblue", "female" = "pink"))
# Calculate weighted means by gender and age for economic attitudes
economic_gaps <- uk_data %>%
filter(!is.na(economic_leftism) & !is.na(gender) & !is.na(age)) %>%
group_by(age, gender) %>%
summarise(
weighted_mean = weighted.mean(economic_leftism, wt, na.rm = TRUE),
n = n(),
.groups = "drop"
) %>%
pivot_wider(names_from = gender, values_from = weighted_mean) %>%
mutate(gender_gap = male - female) %>%
filter(!is.na(gender_gap))
# Display the data
print("Economic Attitudes Gender Gap by Age Group:")
print(economic_gaps)
# Create the chart
ggplot(economic_gaps, aes(x = age, y = gender_gap, group = 1)) +
geom_line(color = "darkred", size = 1.2) +
geom_point(color = "darkred", size = 3) +
geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
labs(
title = "Gender Gap in Economic Attitudes by Age Group",
subtitle = "Higher values = men more left-wing than women",
x = "Age Group",
y = "Gender Gap (Male - Female)"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
